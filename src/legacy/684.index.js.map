{"version":3,"sources":["webpack://portfolio/./src/components/Article.tsx","webpack://portfolio/./src/components/Wrapper.tsx","webpack://portfolio/./src/components/Page.tsx","webpack://portfolio/./src/components/Section.tsx","webpack://portfolio/./src/pages/Projects.tsx"],"names":["styled","title","children","language","useContext","GlobalContext","languageDispatcher","fixedTitle","htmlAttributes","lang","name","content","href"],"mappings":"2YASA,Q,QAPgBA,WAAH,M,0aCWb,Q,QAXgBA,OAAH,K,u8BC4Bb,QApBiC,SAAC,GAGC,IAFjCC,EAEiC,EAFjCA,MACAC,EACiC,EADjCA,SAGOC,EAF0B,GACFC,gBAAWC,MAAlCC,mBADyB,MAG3BC,EAAqB,oBAAH,OACZ,KAAVN,EAAA,aAAqBA,GAAU,IAEjC,OACE,iCACE,UAAC,IAAD,CAAQO,eAAgB,CAAEC,KAAMN,GAAhC,WACE,2BAAQI,KACR,iBAAMG,KAAK,WAAWC,QAASJ,QAEjC,SAAC,EAAD,UAAUL,S,iQCnBhB,Q,QAJgBF,WAAH,M,sGCkMb,QA/LqB,WACnB,OACE,UAAC,IAAD,CAAMC,MAAM,WAAZ,WACE,uCACA,UAAC,IAAD,YACE,cAAGW,KAAK,yCAAR,UACE,yCAEF,SAAC,IAAD,0MAKA,uCACA,SAAC,IAAD,yNAMA,+JAIA,sCACA,SAAC,IAAD,4OAMA,6IAKF,UAAC,IAAD,YACE,cAAGA,KAAK,mFAAR,UACE,qFAFJ,+VAUE,uCACA,oJAIA,sCACA,wLAMF,UAAC,IAAD,YACE,cAAGA,KAAK,iEAAR,UACE,yCAEF,uCACA,gNAMF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,wCAFJ,yNAQE,mFAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,4CAEF,uCACA,yEACA,sCACA,sFAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,6CAEF,uCACA,yEACA,sCACA,6EAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,8CAEF,uCACA,iEACA,sCACA,wEAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,6CAEF,uCACA,kFACA,sCACA,wEAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,2CAFJ,mGAME,8EAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,yDAFJ,mGAME,kEAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,yDAFJ,kGAME,kEAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,6CAFJ,qNAOE,mFAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,6CAFJ,sNAOE,8DAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,yDAFJ,4GAME,8DAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,yDAFJ,2GAME,mFAEF,UAAC,IAAD,YACE,cAAGA,KAAK,gDAAR,UACE,2CAFJ,gEAKE,wDAEF,UAAC,IAAD,YACE,eAAGA,KAAK,6DAAR,WACE,mDADF,uEAIA","file":"684.index.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Article = styled.article`\r\n  background: #eee;\r\n  padding: 7.5px;\r\n  border-radius: 7.5px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport default Article;\r\n","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  word-break: break-all;\r\n  @media screen and (min-width: 768px) {\r\n    & {\r\n      word-break: normal;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import { FC, ReactNode, useContext } from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport GlobalContext from \"../contexts/globalContext\";\r\nimport Wrapper from \"./Wrapper\";\r\n\r\ninterface PageProperties {\r\n  title: string;\r\n  children: ReactNode;\r\n}\r\n\r\nconst Page: FC<PageProperties> = ({\r\n  title,\r\n  children,\r\n}: PageProperties): JSX.Element => {\r\n  const { languageDispatcher } = useContext(GlobalContext);\r\n  const [language] = languageDispatcher;\r\n  const fixedTitle: string = `Krzysztof Zawisła${\r\n    title !== \"\" ? ` - ${title}` : \"\"\r\n  }`;\r\n  return (\r\n    <>\r\n      <Helmet htmlAttributes={{ lang: language }}>\r\n        <title>{fixedTitle}</title>\r\n        <meta name=\"og:title\" content={fixedTitle} />\r\n      </Helmet>\r\n      <Wrapper>{children}</Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  text-align: justify;\r\n`;\r\n\r\nexport default Section;\r\n","import { FC } from \"react\";\nimport Page from \"../components/Page\";\nimport Section from \"../components/Section\";\nimport Article from \"../components/Article\";\n\nconst Projects: FC = (): JSX.Element => {\n  return (\n    <Page title=\"Projects\">\n      <h1>Projects:</h1>\n      <Article>\n        <a href=\"https://github.com/ZSBRybnik/ZSBRybnik\">\n          <h2>ZSBRybnik</h2>\n        </a>\n        <Section>\n          Aplikacja PWA (Custom CMS) dla Zespołu Szkół Budowlanych w Rybniku.\n          Jest to mój największy projekt, który wciąż jest w budowie. Cała\n          aplikacja została skonteneryzowana z użyciem Dockera.\n        </Section>\n        <h3>Front-end</h3>\n        <Section>\n          Front-end strony jest napisany funkcyjnie w TypeScriptcie z\n          wykorzystaniem biblioteki do tworzenia aplikacji internetowych SPA\n          (React). Do ostylowania strony wykorzystałem bibliotekę\n          Styled-components.\n        </Section>\n        <h4>\n          Used technologies: TypeScript, React, React Context, Docker, i18next,\n          Styled-components, ThreeJS, Github Actions and many others.\n        </h4>\n        <h3>Back-end</h3>\n        <Section>\n          Back-end strony jest podzielony na dwie części. Pierwsza to CDN\n          napisany w Rustcie z użyciem Rocket.rs. Natomiast druga część to\n          serwer wystawiający API. Serwer został napisany w Go z wykorzystaniem\n          biblioteki Gin-gonic.\n        </Section>\n        <h4>\n          Used technologies: Golang, Rust, Rocket.rs, Gin-gonic, Redis, MySQL,\n          Docker, Github Actions and many others.\n        </h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/graspd/electron-react-neon-typescript-graspd-like-quick-start\">\n          <h2>electron-react-neon-typescript-graspd-like-quick-start</h2>\n        </a>\n        Szablon pod aplikacje desktopowe napisane w TypeScriptcie z\n        wykorzystaniem Electrona. Konfiguracja została stworzona tak, aby\n        umożliwić bindowanie funkcji z Rusta oraz umożliwić pisanie Front-endu w\n        aplikacji z wykorzystaniem Reacta. Cały codebase został dostosowany do\n        zachowania przejrzystości kodu przez zastosowanie ESLinta, Prettiera i\n        Husky.\n        <h3>Front-end</h3>\n        <h4>\n          Used technologies: Webpack, Babel, TypeScript, React, Docker, ESLint,\n          Prettier, Github Actions, Husky and many others.\n        </h4>\n        <h3>Back-end</h3>\n        <h4>\n          Used technologies: Webpack, Babel, ESLint, Prettier, TypeScript,\n          Electron, Express, Rust, Neon-bindings, Docker, Github Actions, Husky\n          and many others.\n        </h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/krzysztofzawisla.github.io\">\n          <h2>Portfolio</h2>\n        </a>\n        <h3>Front-end</h3>\n        <h4>\n          Used technologies: Webpack, Babel, TypeScript, React, React Context,\n          Styled-components, Docker, ESLint, Prettier, Github Actions, Husky,\n          JSDoc, TSDoc, i18next and many others.\n        </h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>WasmQuery</h2>\n        </a>\n        Eksperymentalna biblioteka wzorowana na jQuery napisana w Go i\n        skompilowana na moduł WebAssembly. Biblioteka ma na celu ułatwienie\n        pisania kodu JavaScript i udostępnienie funkcji z standardowej\n        biblioteki Golanga.\n        <h4>Used technologies: Golang, WebAssembly, TypeScript</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>SnowyMonitor</h2>\n        </a>\n        <h3>Front-end</h3>\n        <h4>Used technologies: JavaScript, SCSS, Docker</h4>\n        <h3>Back-end</h3>\n        <h4>Used technologies: JavaScript, Electron, Docker, NeDB</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>SnowyRecorder</h2>\n        </a>\n        <h3>Front-end</h3>\n        <h4>Used technologies: JavaScript, SCSS, Docker</h4>\n        <h3>Back-end</h3>\n        <h4>Used technologies: JavaScript, Electron, SoX</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>SnowyTicTacToe</h2>\n        </a>\n        <h3>Front-end</h3>\n        <h4>Used technologies: JavaScript, SCSS</h4>\n        <h3>Back-end</h3>\n        <h4>Used technologies: JavaScript, Electron</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>PlanLekcjiZSB</h2>\n        </a>\n        <h3>Front-end</h3>\n        <h4>Used technologies: TypeScript, NextJS, Docker, Axios</h4>\n        <h3>Back-end</h3>\n        <h4>Used technologies: PHP, Simple HTML DOM</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>SnowyResizer</h2>\n        </a>\n        1KB biblioteka napisana do Electrona służąca przywracaniu rozmiaru okna\n        przed jego zamknięciem.\n        <h4>Used technologies: TypeScript, Electron, NeDB</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>BrotliCompressor in Python</h2>\n        </a>\n        Kompresor do Brotli stworzony na potrzeby kompresji plików WASM.\n        Kompresor napisany w Pythonie.\n        <h4>Used technologies: Python, Brotli</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>BrotliCompressor in Golang</h2>\n        </a>\n        Kompresor do Brotli stworzony na potrzeby kompresji plików WASM.\n        Kompresor napisany w Golangu.\n        <h4>Used technologies: Golang, Brotli</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>levenshtein.js</h2>\n        </a>\n        Biblioteka udostępniająca do NodeJS funkcję na wykluczanie elementów z\n        tablicy, które posiadają za duży levenshtein distance względem wyrazu do\n        którego porównujemy listę. Biblioteka została napisana w Rustcie.\n        <h4>Used technologies: TypeScript, Rust, Neon-bindings</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>levenshtein_py</h2>\n        </a>\n        Biblioteka udostępniająca do Pythona funkcję na wykluczanie elementów z\n        tablicy, które posiadają za duży levenshtein distance względem wyrazu do\n        którego porównujemy listę. Biblioteka została napisana w Rustcie.\n        <h4>Used technologies: PyO3, Rust</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>snowy_simple_logger_python</h2>\n        </a>\n        Biblioteka udostępniająca do Pythona proste i szybkie logger API.\n        Biblioteka została napisana w Rustcie.\n        <h4>Used technologies: PyO3, Rust</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>snowy_simple_logger_nodejs</h2>\n        </a>\n        Biblioteka udostępniająca do NodeJS proste i szybkie logger API.\n        Biblioteka została napisana w Rustcie.\n        <h4>Used technologies: TypeScript, Rust, Neon-bindings</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/WasmQuery\">\n          <h2>SnowyUpdater</h2>\n        </a>\n        Mocno ograniczony aktualizator aplikacji napisany w Rustcie.\n        <h4>Used technologies: Rust</h4>\n      </Article>\n      <Article>\n        <a href=\"https://github.com/KrzysztofZawisla/SnowyYouTubeDownloader\">\n          <h2>SnowyYouTubeDownloader</h2>\n          Przestarzały downloader do filmów z YouTube napisany w Pythonie.\n        </a>\n        <h4>Used technologies: Python, ffmpeg, pytube</h4>\n      </Article>\n    </Page>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}